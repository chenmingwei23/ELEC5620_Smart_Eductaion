<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 与Dao对应的类一一对应-->
<mapper namespace="com.ELEC5620.dao.UserMapper">

    <!--注意！这里要按照数据库里的字段来写，而不是entity-->
    <sql id="insertFields">
        pm_id, company_id
        , type, status, company_name, password, first_name, last_name, department, position, email, other_contact_name, other_contact_number, landline, mobile, address, create_time
    </sql>

    <sql id="selectFields">
        id, pm_id
        , company_id, type, status, company_name, password, first_name, last_name, department, position, email, other_contact_name, other_contact_number, landline, mobile,address, create_time
    </sql>

    <select id="selectById" resultType="com.ELEC5620.entity.User">
        select
        <include refid="selectFields"></include>
        from user
        where id = #{id}
    </select>

    <!--注意！这里where的左边按照数据库里的字段来写，而不是entity，所以是email。
        #{}这表示引用User里的属性，按照entity的来写，所以是email-->
    <select id="selectByEmail" resultType="com.ELEC5620.entity.User">
        select
        <include refid="selectFields"></include>
        from user
        where email = #{email}
    </select>

    <select id="selectByCompany" resultType="com.ELEC5620.entity.User">
        select
        <include refid="selectFields"></include>
        from user
        where company_id = #{companyId}
    </select>

    <select id="selectUserByPMId" resultType="com.ELEC5620.entity.User">
        select
        <include refid="selectFields"></include>
        from user
        where pm_id = #{pmId}
    </select>

    <!-- id: 对应UserMapper里面那个函数， parameterType: 对应的Entity， keyProperty：主键-->
    <insert id="insertUser" parameterType="com.ELEC5620.entity.User" keyProperty="id">
        insert into user (<include refid="insertFields"></include>)
        values(#{pmId}, #{companyId}, #{type}, #{status}, #{companyName}, #{password}, #{firstName}, #{lastName}, #{department}, #{position},
        #{email}, #{otherContactName}, #{otherContactNumber}, #{landline}, #{mobile}, #{address}, #{createTime})
    </insert>

    <update id="updateUser" parameterType="com.ELEC5620.entity.User">
        UPDATE user
        <trim prefix="set" suffixOverrides=",">
            <if test="status!=null">status=#{status},</if>
            <if test="password!=null">password=#{password},</if>
            <if test="otherContactName!=null">other_contact_name=#{otherContactName},</if>
            <if test="otherContactNumber!=null">other_contact_number=#{otherContactNumber},</if>
            <if test="department!=null">department=#{department},</if>
            <if test="position!=null">position=#{position},</if>
            <if test="landline!=null">landline=#{landline},</if>
            <if test="mobile!=null">mobile=#{mobile},</if>
            <if test="address!=null">address=#{address},</if>
        </trim>
        WHERE id=#{id}
    </update>

    <delete id="deleteById">
        DELETE
        FROM reminder
        WHERE id = #{id}
    </delete>

    <update id="resetPassword">
        update user
        set password = #{password}
        where id = #{id}
    </update>

</mapper>